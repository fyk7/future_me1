orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
  aws-ecs: circleci/aws-ecs@1.0.1
version: 2.1
jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers-legacy
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: root
          MYSQL_PASSWORD: ''
          MYSQL_DATABASE: future_me_test      
    working_directory: ~/future_me
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Database file change
      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.ci ./config/database.yml
      # Database setting
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      # browser for test setting
      - run: 
          name: Update ChromeDriver Version
          command: |
            bundle exec rails webdrivers:chromedriver:update
      - run:
          name: Rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
          
workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
      - aws-ecr/build-and-push-image:
          requires:
            - test
          filters:
            branches:
              only:
                - master
          account-url: AWS_ECR_ACCOUNT_URL
          extra-build-args: '--build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY}'
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image  
          filters:
            branches:
              only:
                - master            
          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${AWS_ECS_CLUSTER_NAME}"
          service-name: "${AWS_RESOURCE_NAME_PREFIX}-service"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}"
      